{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"We make the most useful snippets easily available Use the Search Bar it works great! Submit your snippet, we'll publish it and give you credit.","title":"Welcome"},{"location":"#we-make-the-most-useful-snippets-easily-available","text":"Use the Search Bar it works great! Submit your snippet, we'll publish it and give you credit.","title":"We make the most useful snippets easily available"},{"location":"pandas/","text":"Drop Null Values Drop the rows in which ANY value is null : data_frame = data_frame.na.drop(\"any\") Drop null values only if ALL values are null in a row: df.na.drop(\"all\") Drop the null values only in the selected columns df.na.drop(\"all\", Seq(\"col1\", \"col2\", \"col3\"))","title":"Pandas"},{"location":"pandas/#_1","text":"","title":""},{"location":"pandas/#drop-null-values","text":"","title":"Drop Null Values"},{"location":"pandas/#drop-the-rows-in-which-any-value-is-null","text":"data_frame = data_frame.na.drop(\"any\")","title":"Drop the rows in which ANY value is null:"},{"location":"pandas/#drop-null-values-only-if-all-values-are-null-in-a-row","text":"df.na.drop(\"all\")","title":"Drop null values only if ALL values are null in a row:"},{"location":"pandas/#drop-the-null-values-only-in-the-selected-columns","text":"df.na.drop(\"all\", Seq(\"col1\", \"col2\", \"col3\"))","title":"Drop the null values only in the selected columns"},{"location":"pyspark/","text":"Create a New Table Once you have instantiated your spark context you can use its sql method to pass SQL commands. In this case we use the sql command CREATE TABLE IF NOT EXISTS to create a new database << my_database >> and a new table << my_table >>. Note how we must specify the name and the type of the new columns. database_name = 'my_database' table_name = 'my_table' # Make sure you specify the name and Type of each column spark.sql(f\"\"\" CREATE TABLE IF NOT EXISTS {database_name}.{table_name} (column_name_1 STRING, column_name_2 STRING, column_name_3 INT) \"\"\" )","title":"Pyspark"},{"location":"pyspark/#_1","text":"","title":""},{"location":"pyspark/#create-a-new-table","text":"Once you have instantiated your spark context you can use its sql method to pass SQL commands. In this case we use the sql command CREATE TABLE IF NOT EXISTS to create a new database << my_database >> and a new table << my_table >>. Note how we must specify the name and the type of the new columns. database_name = 'my_database' table_name = 'my_table' # Make sure you specify the name and Type of each column spark.sql(f\"\"\" CREATE TABLE IF NOT EXISTS {database_name}.{table_name} (column_name_1 STRING, column_name_2 STRING, column_name_3 INT) \"\"\" )","title":"Create a New Table"},{"location":"python/","text":"Install a Virtual Environment #1. Install virtual env pip install virtualenv #2. Create a virual environment in the folder of your choice cd your_folder virtualenv name_of_your_virtual_environment #3. Activate your virtual environment source name_of_your_virtual_environment/bin/activate #4 Now you can install pip packages in your virtual environment pip install your_new_package #5. When done, deactivate your virtual environment. You need to be in your_folder directory. deactivate #6. To delete your virtual environment just delete your_folder directory rm -rf name_of_your_virtual_environment #7 To list all your virtual environments lsvirtualenv Reference: https://python-guide-ru.readthedocs.io/en/latest/dev/virtualenvs.html","title":"Python"},{"location":"python/#_1","text":"","title":""},{"location":"python/#install-a-virtual-environment","text":"#1. Install virtual env pip install virtualenv #2. Create a virual environment in the folder of your choice cd your_folder virtualenv name_of_your_virtual_environment #3. Activate your virtual environment source name_of_your_virtual_environment/bin/activate #4 Now you can install pip packages in your virtual environment pip install your_new_package #5. When done, deactivate your virtual environment. You need to be in your_folder directory. deactivate #6. To delete your virtual environment just delete your_folder directory rm -rf name_of_your_virtual_environment #7 To list all your virtual environments lsvirtualenv Reference: https://python-guide-ru.readthedocs.io/en/latest/dev/virtualenvs.html","title":"Install a Virtual Environment"}]}